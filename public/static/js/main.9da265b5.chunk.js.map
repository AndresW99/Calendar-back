{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","Components/auth/LoginScreen.js","Components/ui/Navbar.js","Components/calendar/CalendarEvent.js","actions/ui.js","Components/calendar/CalendarModal.js","helpers/calendar-messages-es.js","Components/ui/AddNewFab.js","Components/ui/DeleteEventFab.js","Components/calendar/CalendarScreen.js","Router/PrivateRoute.js","Router/PublicRoute.js","Router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","finish","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateFinish","setDateFinish","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","ariaHideApp","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9da265b5.chunk.js","sourcesContent":["export const types = {\r\n\r\n    uiOpenModal: '[ui] Open Modal',\r\n    uiCloseModal: '[ui] Close Modal', \r\n\r\n    eventSetActive: '[event] Set Active',\r\n    eventLogout: '[event] Logout event',\r\n\r\n    eventStartAddNew: '[event] Start add new', \r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n\r\n        case types.authLogin:\r\n\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false,\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n\r\n            return {\r\n                checking: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n","import { types } from '../types/types';\r\n\r\n// {\r\n//     id: 'asdsads',\r\n//     title: 'Cumpleaños del jefe',   //Se crea un nuevo evento para el calendario\r\n//     start: moment().toDate(),\r\n//     end: moment().add( 2, 'hours').toDate(),\r\n//     notes: 'Comprar el pastel',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Andres'\r\n//     }\r\n// }\r\n\r\n\r\nconst initialState = {\r\n\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n\r\n        case types.eventAddNew:\r\n\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n\r\n        case types.eventSetActive:\r\n\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload \r\n            }\r\n\r\n        case types.eventClearActiveEvent:\r\n\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdated:\r\n\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => ( e.id === action.payload.id ) ? action.payload : e   //El id del evento tiene que ser igual para devolver la info modificada\r\n                )\r\n            }\r\n\r\n        case types.eventDeleted:\r\n\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => ( e.id !== state.activeEvent.id ) \r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            }\r\n\r\n        case types.eventLogout: \r\n\r\n            return {\r\n                ...initialState\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from '../types/types';\r\n\r\n\r\nconst initialState = {\r\n    modalOpen: false, \r\n}\r\n\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.uiOpenModal:\r\n            \r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n\r\n        return {\r\n            ...state,\r\n            modalOpen: false\r\n        }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { combineReducers } from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);\r\n","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n\r\n    if ( method === 'GET' ) {\r\n        \r\n        return fetch( url );\r\n\r\n    } else {\r\n\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify( data )\r\n        }); \r\n    }\r\n}\r\n\r\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if ( method === 'GET' ) {\r\n        \r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        } );\r\n\r\n    } else {\r\n\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token,\r\n            },\r\n            body: JSON.stringify( data )\r\n        }); \r\n    }\r\n}\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","import moment from 'moment';\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n\r\n\r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment( e.end ).toDate(),\r\n            start: moment( e.start ).toDate(),\r\n        })\r\n    )\r\n\r\n}","import Swal from 'sweetalert2';\r\nimport { fetchConToken } from '../helpers/fetch';\r\nimport { prepareEvents } from '../helpers/prepareEvents';\r\nimport { types } from '../types/types';\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken( 'events', event, 'POST' );\r\n            const body = await resp.json();\r\n            \r\n            if (body.ok) {\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name\r\n                }\r\n\r\n                dispatch( eventAddNew( event) );\r\n            }\r\n        } catch (error) {\r\n            \r\n            console.log(error)\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventAddNew = ( event ) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = ( event ) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\r\n\r\nexport const eventStartUpdate = ( event ) => {\r\n\r\n    return async( dispatch ) => {\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken(`events/${ event.id }`, event, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventUpdated( event ) );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nconst eventUpdated = ( event ) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { id } = getState().calendar.activeEvent;\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken(`events/${ id }`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventDeleted() );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({ type: types.eventDeleted });\r\n\r\nexport const eventStartLoading = () => {\r\n\r\n    return async( dispatch ) => {\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken( 'events' );\r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents( body.eventos );\r\n            dispatch( eventLoaded( events ) )\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventLoaded = ( events ) => ({\r\n\r\n    type: types.eventLoaded,\r\n    payload: events\r\n\r\n})\r\n\r\nexport const clear = () => ({ type: types.eventLogout })","import Swal from 'sweetalert2';\r\nimport { fetchConToken, fetchSinToken } from '../helpers/fetch';\r\nimport { types } from \"../types/types\";\r\nimport { clear } from './events';\r\n\r\n\r\n\r\nexport const startLogin = (email, password) => {\r\n\r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fetchSinToken( 'auth', { email, password }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            \r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    };\r\n}\r\n\r\nexport const startRegister = ( email, password, name ) => {\r\n\r\n    return async ( dispatch ) => {\r\n\r\n        const resp = await fetchSinToken( 'auth/new', { email, password, name }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            \r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n\r\n    return async ( dispatch ) => {\r\n\r\n        const resp = await fetchConToken( 'auth/renew' );\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            \r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            dispatch( checkingFinish() );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\nconst login = ( user ) => ({\r\n\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n\r\n    return ( dispatch ) => {\r\n\r\n        localStorage.clear();\r\n        dispatch( clear() )\r\n        dispatch( logout() );\r\n\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout });\r\n\r\n// const register = ( user ) => ({\r\n\r\n//     type: types.authStartRegister,\r\n//     payload: user\r\n\r\n// });","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport './login.css';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: '',\r\n        lPassword: ''\r\n    });\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: 'Andrew',\r\n        rEmail: 'wellmannp@gmail.com',\r\n        rPassword1: '1234567',\r\n        rPassword2: '1234567'\r\n    });\r\n\r\n    const { lEmail, lPassword} = formLoginValues\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n\r\n    const handleLogin = ( e ) => {\r\n\r\n        e.preventDefault();\r\n        dispatch( startLogin( lEmail, lPassword ) );\r\n    }\r\n\r\n    const handleRegister = ( e ) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if( rPassword1 !== rPassword2 ) {\r\n            return Swal.fire('Error', 'Las contraseñas deben de ser iguales', 'error');\r\n        }\r\n        dispatch( startRegister( rEmail, rPassword1, rName ) )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={ rName }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={ rEmail }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={ rPassword1 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={ rPassword2 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n// import { clear } from '../../actions/events';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const { name } = useSelector(state => state.auth)\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = (  ) => {\r\n        \r\n        dispatch( startLogout() );\r\n        // dispatch( clear() )\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                { name }\r\n            </span>\r\n\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={ handleLogout }    \r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n\r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n            <span> { title } </span>\r\n            <strong>- { user.name } </strong>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from '../types/types';\r\n\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport DateTimePicker from 'react-datetime-picker';\r\n\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n  };\r\n\r\n  if( process.env.NODE_ENV !== 'test') {\r\n      Modal.setAppElement('#root');\r\n  }\r\n\r\n    const now = moment().minutes(0).seconds(0).add(1,'hours');\r\n    const finish = now.clone().add(1, 'hours');\r\n\r\n    const initEvent = {\r\n        title: '',\r\n        notes: '',\r\n        start: now.toDate(),\r\n        end: finish.toDate()\r\n    };\r\n\r\n\r\n    export const CalendarModal = () => {\r\n\r\n    const { modalOpen } = useSelector( state => state.ui );\r\n    const { activeEvent } = useSelector( state => state.calendar );\r\n    const dispatch = useDispatch();\r\n\r\n    const [ dateStart, setDateStart ] = useState( now.toDate() );\r\n    const [ dateFinish, setDateFinish ] = useState( finish.toDate() );\r\n    const [ titleValid, setTitleValid ] = useState(true);\r\n\r\n    const [formValues, setFormValues] = useState( initEvent );\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n\r\n        if ( activeEvent ) {\r\n            setFormValues( activeEvent );\r\n        }else{\r\n            setFormValues( initEvent );\r\n        }\r\n\r\n    }, [ activeEvent, setFormValues ])\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {  \r\n\r\n        dispatch( uiCloseModal() );\r\n        dispatch( eventClearActiveEvent() );\r\n        setFormValues( initEvent );\r\n      \r\n    }\r\n\r\n    const handleStartDateChange = ( e ) => {\r\n\r\n        setDateStart( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        }) \r\n    }\r\n\r\n    const handleFinishDateChange = ( e ) => {\r\n\r\n        setDateFinish( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        }) \r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment( start );\r\n        const momentEnd   = moment( end );\r\n\r\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\r\n            return Swal.fire('Error','La fecha final debe de ser mayor a la fecha de inicio','error');\r\n        }\r\n\r\n        if ( title.trim().length < 2) {\r\n            return setTitleValid( false );\r\n        }\r\n\r\n        if ( activeEvent ) {\r\n            dispatch( eventStartUpdate( formValues ) )\r\n        } else {\r\n\r\n            dispatch( eventStartAddNew( formValues) );\r\n        }\r\n\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n          isOpen={ modalOpen }\r\n          onRequestClose={ closeModal }\r\n          style={ customStyles }\r\n          closeTimeoutMS={ 200 }\r\n          className=\"modal\"\r\n          overlayClassName=\"modal-fondo\"\r\n          ariaHideApp={ !process.env.NODE_ENV === 'test' }\r\n        >\r\n           <h1> { (activeEvent) ? 'Editar evento' : 'Nuevo evento' } </h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={ handleSubmitForm }\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleStartDateChange }\r\n                        value={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleFinishDateChange }\r\n                        value={ dateFinish }\r\n                        minDate={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={ `form-control ${ !titleValid && 'is-invalid' }` }\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleOpenModal = () => {\r\n\r\n        dispatch( uiOpenModal() );\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={ handleOpenModal }\r\n        >\r\n\r\n        <i className=\"fas fa-plus\"></i>\r\n\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n\r\n        dispatch( eventStartDelete() );\r\n\r\n    }\r\n\r\n    return (\r\n        \r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ handleDelete }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento </span>\r\n        </button>\r\n\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es';\r\n\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es') //Cambiarle el idioma a moment\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector( state => state.calendar );\r\n    const { uid } = useSelector( state => state.auth );\r\n\r\n\r\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch( eventStartLoading() )\r\n\r\n    }, [ dispatch ] )\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch( eventSetActive( e ) );\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch( eventClearActiveEvent() );\r\n    }\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n\r\n        \r\n\r\n    const style = {\r\n\r\n        backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\r\n        borderRadius: '0px',\r\n        opacity: 0.8,\r\n        display: 'block',\r\n        color: 'white'\r\n    }\r\n\r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={ localizer }\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={ messages }\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelectEvent }\r\n                onView={ onViewChange }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                view={ lastView }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n\r\n                {\r\n                    (activeEvent) && <DeleteEventFab />\r\n                }\r\n\r\n            <CalendarModal />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        \r\n        <Route { ...rest }\r\n            component={ ( props ) => (\r\n                ( isAuthenticated )\r\n                ? <Component { ...props } />\r\n                : <Redirect to=\"/login\" />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({ \r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest \r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest } \r\n            component={ ( props ) => (\r\n                ( !isAuthenticated )\r\n                ? <Component { ...props } />\r\n                : <Redirect to =\"/\" />\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n  } from 'react-router-dom';\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../Components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../Components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const { checking, uid } = useSelector( state => state.auth );\r\n\r\n  useEffect(() => {\r\n\r\n    dispatch( startChecking() );\r\n\r\n  }, [ dispatch ])\r\n\r\n  if ( checking ) {\r\n    return (<h5>Espere...</h5>)\r\n  }\r\n\r\n    return (\r\n        <Router>\r\n          <div>\r\n    \r\n            <Switch>\r\n\r\n            <PublicRoute \r\n              exact \r\n              path=\"/login\"\r\n              component={ LoginScreen }\r\n              isAuthenticated = { !!uid }  \r\n            />\r\n\r\n            <PrivateRoute \r\n              exact \r\n              path=\"/\"\r\n              component={ CalendarScreen }\r\n              isAuthenticated = { !!uid }  \r\n            />\r\n\r\n            <Redirect to=\"/\"/>\r\n\r\n            </Switch>\r\n\r\n          </div>\r\n        </Router>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './Router/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}